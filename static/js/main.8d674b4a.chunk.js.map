{"version":3,"sources":["assets/logo/logo.svg","components/Header/Header.js","components/Menu/Menu.js","components/Home/Home.js","data/list.js","utils/numbers.js","utils/text.js","components/Pages/Numbers/NumberToWords/NumberToWords.js","Routes.jsx","components/Footer/Footer.js","reportWebVitals.js","index.js"],"names":["Header","src","logo","alt","Menu","history","className","data-id","onClick","e","id","target","dataset","push","Home","placeValues","1","10","100","numberTypes","c","o","answerResult","w","randomBetween","min","max","random","Math","result","round","formatOrdinal","value","Intl","NumberFormat","process","format","2","3","capitalize","text","split","map","word","charAt","toUpperCase","slice","join","NumToWords","speech","Speech","init","volume","lang","rate","pitch","splitSentences","listeners","onvoiceschanged","voices","console","log","useState","places","setPlaces","type","setType","number","setNumber","words","setWords","solution","setSolution","answer","setAnswer","handleRandom","decimalPlaces","randomPlaces","useEffect","method","converter","goBack","htmlFor","name","onChange","Object","entries","index","hasBrowserSupport","speak","disabled","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","event","preventDefault","second","trim","toLowerCase","Routes","useHistory","exact","path","component","NumberToWords","Footer","href","Date","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d674b4a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3ee66775.svg\";","import './Header.css'\nimport logo from '../../assets/logo/logo.svg'\n\nconst Header = () => {\n  return (\n    <header>\n      <img src={logo} alt=\"logo\" />\n    </header>\n  )\n}\n\nexport default Header\n","import './Menu.css'\n\nconst Menu = ({ history }) => {\n  const handleOnClick = (e) => {\n    const { id } = e.target.dataset\n    history.push(`/${id}`)\n  }\n\n  return (\n    <>\n      <div className=\"title\">\n        <h1>What would you like to practice?</h1>\n      </div>\n\n      <div className=\"content\">\n        <ul>\n          <li data-id=\"n2w\" onClick={handleOnClick}>\n            Number to Words\n          </li>\n        </ul>\n      </div>\n    </>\n  )\n}\n\nexport default Menu\n","import Menu from '../Menu/Menu'\n\nconst Home = ({ history }) => {\n  return <Menu history={history} />\n}\n\nexport default Home\n","export const placeValues = {\n  1: 'ones',\n  10: 'tens',\n  100: 'hundreds',\n  1_000: 'thousands',\n  10_000: 'ten thousands',\n  100_000: 'hundreds thousands',\n  1_000_000: 'millions',\n  10_000_000: 'ten millions',\n  100_000_000: 'hundred millions',\n  1_000_000_000: 'billions',\n  1_000_000_000_000: 'trillions',\n}\n\nexport const numberTypes = {\n  c: 'cardinal',\n  o: 'ordinal',\n}\n\nexport const answerResult = {\n  c: 'correct',\n  w: 'wrong',\n}\n","export const randomBetween = (min = 0, max) => {\n  const random = Math.random()\n  const result = random * (max - min + 1) + min / 2\n  return Math.round(result)\n}\n\nexport const randomPlaces = (decimalPlaces = 1) => {\n  const min = decimalPlaces === 1 ? 0 : decimalPlaces\n  const max = decimalPlaces * 10 - 1\n  const result = randomBetween(min, max)\n  return result\n}\n\nexport const formatCardinal = (value) => {\n  const result = new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(\n    value\n  )\n  return result\n}\n\nexport const formatOrdinal = (value) => {\n  const suffixes = {\n    1: 'st',\n    2: 'nd',\n    3: 'rd',\n  }\n  const defaultSuffix = 'th'\n\n  let result = new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(value)\n  result += suffixes[value] || defaultSuffix\n  return result\n}\n","export const compareText = (first, second) => {\n  const cleanFirst = first.trim().toLowerCase()\n  const cleanSecond = second.trim().toLowerCase()\n  return cleanFirst === cleanSecond\n}\n\nexport const capitalize = (text) => {\n  if (!text) return ''\n\n  const words = text.split(' ')\n  const result = words\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ')\n\n  return result\n}\n","import { useEffect, useState } from 'react'\nimport converter from 'number-to-words'\nimport Speech from 'speak-tts'\nimport { placeValues, numberTypes, answerResult } from '../../../../data/list'\nimport {\n  formatOrdinal,\n  formatCardinal,\n  randomPlaces,\n} from '../../../../utils/numbers'\nimport { compareText, capitalize } from '../../../../utils/text'\nimport './NumberToWords.css'\n\nconst NumToWords = ({ history }) => {\n  const speech = new Speech()\n  speech.init({\n    volume: 1,\n    lang: process.env.REACT_APP_LOCALE,\n    rate: 1,\n    pitch: 1,\n    splitSentences: true,\n    listeners: {\n      onvoiceschanged: (voices) => {\n        console.log('Event voiceschanged', voices)\n      },\n    },\n  })\n\n  const handleBack = (e) => {\n    history.goBack()\n  }\n\n  const [places, setPlaces] = useState(1)\n  const [type, setType] = useState('c')\n  const [number, setNumber] = useState(0)\n  const [words, setWords] = useState('')\n  const [solution, setSolution] = useState('')\n  const [answer, setAnswer] = useState('')\n\n  const handlePlaces = (event) => {\n    setPlaces(event.target.value)\n  }\n\n  const handleTypes = (event) => {\n    setType(event.target.value)\n  }\n\n  const handleRandom = () => {\n    const value = randomPlaces(places)\n    setNumber(value)\n    setSolution('')\n    setAnswer('')\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [places, type])\n\n  useEffect(() => {\n    let method = 'toWords'\n    if (type === 'o') {\n      method += 'Ordinal'\n    }\n\n    const result = converter[method](number)\n    setWords(result)\n  }, [number])\n\n  const handleSolution = (event) => {\n    setSolution(event.target.value)\n  }\n\n  const handleAnswer = (event) => {\n    event.preventDefault()\n    const result = compareText(solution, words) ? 'c' : 'w'\n    setAnswer(result)\n  }\n\n  const handleSpeech = () => {\n    speech.speak({\n      text: words,\n    })\n  }\n\n  return (\n    <>\n      <div className=\"subtitle\">\n        <h1>\n          <a onClick={handleBack}>&lt;</a>\n        </h1>\n        <h1>Number to Words</h1>\n      </div>\n\n      <div className=\"content\">\n        <div className=\"input-group\">\n          <label htmlFor=\"level\">Level</label>\n          <select name=\"level\" value={places} onChange={(e) => handlePlaces(e)}>\n            {Object.entries(placeValues).map((value, index) => (\n              <option key={index} value={value[0]}>\n                {`${index + 1} - ${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"type\">Type</label>\n          <select name=\"type\" value={type} onChange={(e) => handleTypes(e)}>\n            {Object.entries(numberTypes).map((value, index) => (\n              <option key={index} value={value[0]}>\n                {`${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"number\">\n          {type === 'o' && formatOrdinal(number)}\n          {type === 'c' && formatCardinal(number)}\n        </div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          {speech.hasBrowserSupport() && (\n            <button onClick={handleSpeech}>Listen</button>\n          )}\n        </div>\n\n        {!answer && (\n          <>\n            <div className=\"input-group\">\n              <span>Write the number in words</span>\n            </div>\n\n            <div className=\"input-group\">\n              <textarea\n                name=\"answer\"\n                id=\"answer\"\n                onChange={(e) => handleSolution(e)}\n                value={solution}\n                disabled={answer}\n                autoComplete=\"off\"\n                autoCorrect=\"off\"\n                autoCapitalize=\"off\"\n                spellCheck=\"false\"\n                rows=\"4\"\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <button\n                type=\"submit\"\n                onClick={handleAnswer}\n                disabled={!solution || answer ? true : ''}\n              >\n                Answer\n              </button>\n            </div>\n          </>\n        )}\n\n        {answer && (\n          <div>\n            <div className={`result result-${answerResult[answer]}`}>\n              <span>{capitalize(answerResult[answer])}!</span>\n            </div>\n            <div>\n              <span>\n                {answer === 'c' && `Yes! is `}\n                {answer === 'w' && `Nop! the correct answer is `}\n                <strong>{words}</strong>\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default NumToWords\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport NumberToWords  from './components/Pages/Numbers/NumberToWords/NumberToWords';\n\nconst Routes = () => {\n  const history = useHistory();\n\n  return (\n    <Router>\n      <Switch history={history}>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/n2w\" component={NumberToWords} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;","import './Footer.css'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        Created by <a href=\"https://github.com/equiman\">equiman</a>\n      </div>\n      <div>2021 © {new Date().getFullYear()}</div>\n    </footer>\n  )\n}\n\nexport default Footer\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Header from './components/Header/Header'\nimport Routes from './Routes'\nimport Footer from './components/Footer/Footer'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header></Header>\n    <main>\n      <Routes />\n    </main>\n    <Footer></Footer>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}