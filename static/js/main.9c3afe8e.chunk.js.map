{"version":3,"sources":["assets lazy /^/.//.*$/ groupOptions: {} namespace object","hooks/Images/useLoadScrSet.js","data/images.js","components/ui/Picture/Source.js","components/ui/Picture/Picture.js","components/sections/Header/Header.js","utils/theme.js","components/sections/Footer/Footer.js","components/ui/Nav/Nav.js","components/shared/Listen/Listen.js","utils/text.js","data/list.js","components/shared/Answer/Answer.js","utils/numbers.js","pages/Numbers/NumToWords.js","utils/date.js","pages/Dates/YearToWords.js","pages/Dates/DateToWords.js","utils/time.js","data/menu.js","pages/Times/TimeToWords.js","components/ui/Menu/Menu.js","components/sections/Home/Home.js","components/sections/NotFound/NotFound.js","components/layouts/Landing/Routes.jsx","components/layouts/Landing/Landing.js","reportWebVitals.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","useLoadScrSet","src","type","sizes","useState","set","setSet","error","setError","isLoading","setIsLoading","useEffect","fetchImage","filePath","a","size","image","default","srcset","length","propTypes","PropTypes","string","isRequired","array","defaultProps","IMAGE_TYPE","svg","Source","srcSet","join","Picture","types","alt","className","defaultSize","Header","setTheme","mode","document","querySelector","dataset","theme","localStorage","setItem","Footer","href","onClick","Date","getFullYear","Nav","back","text","to","Listen","speech","Speech","hasBrowserSupport","init","volume","lang","process","rate","pitch","splitSentences","catch","handleSpeech","speak","capitalize","split","word","charAt","toUpperCase","slice","PLACE_VALUES","numberTypes","c","answerResult","w","Answer","words","rows","answer","setAnswer","solution","setSolution","autoCapitalize","autoComplete","autoCorrect","disabled","name","spellCheck","value","onChange","target","event","preventDefault","second","result","trim","toLowerCase","randomNumberBetween","min","max","Math","random","round","formatOrdinal","Intl","NumberFormat","format","NumToWords","places","setPlaces","setType","number","setNumber","setWords","handleRandom","decimalPlaces","randomPlaces","method","converter","htmlFor","entries","index","isValidDate","date","Number","isNaN","valueOf","addYear","amount","TypeError","year","setFullYear","getYear","randomDateBetween","getTime","YearToWords","setDate","dateToWords","getYearToWords","DateToWords","getDateToWords","DateTimeFormat","HOUR_RANGE","MINUTE_RANGE","getTimeToWords","hour","minutes","isValidMinute","timeInWords","MENU_OPTIONS","section","path","component","time","setTime","String","padStart","Menu","menu","Home","NotFound","Routes","exact","Landing","savedTheme","getItem","userPrefersDark","window","matchMedia","matches","getTheme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c3afe8e.chunk.js","sourcesContent":["var map = {\n\t\"./error/404-320w.avif\": [\n\t\t52,\n\t\t9\n\t],\n\t\"./error/404-320w.png\": [\n\t\t53,\n\t\t13\n\t],\n\t\"./error/404-320w.webp\": [\n\t\t54,\n\t\t4\n\t],\n\t\"./error/404-480w.avif\": [\n\t\t55,\n\t\t10\n\t],\n\t\"./error/404-480w.png\": [\n\t\t56,\n\t\t14\n\t],\n\t\"./error/404-480w.webp\": [\n\t\t57,\n\t\t5\n\t],\n\t\"./error/404-720w.avif\": [\n\t\t58,\n\t\t11\n\t],\n\t\"./error/404-720w.png\": [\n\t\t59,\n\t\t15\n\t],\n\t\"./error/404-720w.webp\": [\n\t\t60,\n\t\t6\n\t],\n\t\"./logo/logo.avif\": [\n\t\t61,\n\t\t12\n\t],\n\t\"./logo/logo.png\": [\n\t\t62,\n\t\t16\n\t],\n\t\"./logo/logo.svg\": [\n\t\t63,\n\t\t7\n\t],\n\t\"./logo/logo.webp\": [\n\t\t64,\n\t\t8\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 37;\nmodule.exports = webpackAsyncContext;","import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nconst useLoadScrSet = (src, type, sizes) => {\n  const [set, setSet] = useState([])\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchImage = async (filePath, size = '') => {\n      setIsLoading(true)\n\n      try {\n        const { default: image } = await import(\n          `${process.env.REACT_APP_ASSETS}/${filePath}`\n        )\n\n        if (size) {\n          size = ` ${size}w`\n        }\n\n        const set = `${image}${size}`\n\n        setSet((srcset) => [...srcset, set])\n      } catch (error) {\n        setError(error)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (!sizes?.length) {\n      fetchImage(`${src}.${type}`)\n    } else {\n      for (const size of sizes) {\n        fetchImage(`${src}-${size}w.${type}`, size)\n      }\n    }\n\n    return () => {\n      setSet('')\n      setError('')\n      setIsLoading(false)\n    }\n  }, [src])\n\n  return { srcset: set, error, isLoading }\n}\n\nuseLoadScrSet.propTypes = {\n  src: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  sizes: PropTypes.array,\n}\n\nuseLoadScrSet.defaultProps = {\n  type: 'png',\n  sizes: [],\n}\n\nexport default useLoadScrSet\n","export const IMAGE_TYPE = {\n  svg: 'svg+xml',\n}\n","import useLoadScrSet from '../../../hooks/Images/useLoadScrSet'\nimport { IMAGE_TYPE } from '../../../data/images'\n\nconst Source = ({ src, type, sizes }) => {\n  const { srcset, isLoading } = useLoadScrSet(src, type, sizes)\n\n  return (\n    <>\n      {!isLoading && (\n        <source\n          srcSet={srcset.join(',')}\n          type={`image/${IMAGE_TYPE[type] || type}`}\n        />\n      )}\n    </>\n  )\n}\n\nexport default Source\n","import PropTypes from 'prop-types'\n\nimport Source from './Source'\nimport useLoadScrSet from '../../../hooks/Images/useLoadScrSet'\n\nconst Picture = ({ src, types, sizes, alt, className }) => {\n  let defaultSize = ''\n\n  if (sizes?.length) {\n    const size = sizes[0]\n\n    defaultSize = `-${size}w`\n  }\n\n  const { srcset, isLoading } = useLoadScrSet(`${src}${defaultSize}`, 'png')\n\n  return (\n    <>\n      {!isLoading && (\n        <picture>\n          {types.map((type) => (\n            <Source key={type} sizes={sizes} src={src} type={type} />\n          ))}\n\n          <img alt={alt} className={className} src={srcset} />\n        </picture>\n      )}\n    </>\n  )\n}\n\nPicture.propTypes = {\n  src: PropTypes.string.isRequired,\n  types: PropTypes.array,\n  sizes: PropTypes.array,\n  alt: PropTypes.string,\n  className: PropTypes.string,\n}\n\nPicture.defaultProps = {\n  types: ['png'],\n  sizes: [],\n  alt: '',\n  className: '',\n}\n\nexport default Picture\n","import './Header.css'\nimport Picture from '../../ui/Picture/Picture'\n\nconst Header = () => {\n  return (\n    <header>\n      <Picture\n        alt=\"Cronos Logo\"\n        src=\"logo/logo\"\n        types={['svg', 'avif', 'webp', 'png']}\n      />\n    </header>\n  )\n}\n\nexport default Header\n","const DARK_MODE = 'dark'\nconst LIGHT_MODE = 'light'\n\nexport const getTheme = () => {\n  const savedTheme = localStorage.getItem('theme')\n\n  const userPrefersDark = window.matchMedia(\n    '(prefers-color-scheme: dark)'\n  ).matches\n\n  const current = savedTheme ?? (userPrefersDark ? DARK_MODE : LIGHT_MODE)\n\n  setTheme(current)\n}\n\nexport const setTheme = (mode) => {\n  const html = document.querySelector('html')\n\n  html.dataset.theme = mode\n  localStorage.setItem('theme', mode)\n}\n","import './Footer.css'\n\nimport { setTheme } from '../../../utils/theme'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        <a href=\"#\" onClick={() => setTheme('dark')}>\n          Dark\n        </a>{' '}\n        -{' '}\n        <a href=\"#\" onClick={() => setTheme('light')}>\n          Light\n        </a>\n      </div>\n\n      <div>\n        Created by <a href=\"https://github.com/equiman\">equiman</a> - 2021 ©{' '}\n        {new Date().getFullYear()}\n      </div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport './Nav.css'\n\nconst Nav = ({ back, text }) => {\n  return (\n    <nav data-testid=\"navbar\">\n      <div className={!back ? 'title' : 'subtitle'}>\n        {back && (\n          <h1>\n            <Link data-testid=\"home-link\" to=\"/\">\n              &lt;\n            </Link>\n          </h1>\n        )}\n        <h1>{text}</h1>\n      </div>\n    </nav>\n  )\n}\n\nNav.propTypes = {\n  back: PropTypes.bool,\n  text: PropTypes.string.isRequired,\n}\n\nNav.defaultProps = {\n  back: true,\n}\n\nexport default Nav\n","import PropTypes from 'prop-types'\nimport Speech from 'speak-tts'\n\nconst Listen = ({ text }) => {\n  const speech = new Speech()\n\n  if (speech.hasBrowserSupport()) {\n    const options = {\n      volume: 1,\n      lang: process.env.REACT_APP_LOCALE,\n      rate: 1,\n      pitch: 1,\n      splitSentences: true,\n    }\n\n    speech.init(options).catch((error) => {\n      throw new Error(`An error occurred while initializing: ${error}`)\n    })\n  }\n\n  const handleSpeech = async () => {\n    await speech.speak({\n      text: text,\n    })\n  }\n\n  return (\n    <>\n      {speech.hasBrowserSupport() && (\n        <button onClick={handleSpeech}>Listen</button>\n      )}\n    </>\n  )\n}\n\nListen.propTypes = {\n  text: PropTypes.string.isRequired,\n}\n\nexport default Listen\n","export const compareText = (first, second) => {\n  const cleanFirst = first.trim().toLowerCase()\n  const cleanSecond = second.trim().toLowerCase()\n\n  return cleanFirst === cleanSecond\n}\n\nexport const capitalize = (text) => {\n  if (!text) return ''\n\n  const words = text.split(' ')\n\n  return words\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ')\n}\n","export const PLACE_VALUES = {\n  1: 'ones',\n  10: 'tens',\n  100: 'hundreds',\n  1_000: 'thousands',\n  10_000: 'ten thousands',\n  100_000: 'hundreds thousands',\n  1_000_000: 'millions',\n  10_000_000: 'ten millions',\n  100_000_000: 'hundred millions',\n  1_000_000_000: 'billions',\n  1_000_000_000_000: 'trillions',\n}\n\nexport const numberTypes = {\n  c: 'cardinal',\n  o: 'ordinal',\n}\n\nexport const answerResult = {\n  c: 'correct',\n  w: 'wrong',\n}\n","import PropTypes from 'prop-types'\nimport { useEffect, useState } from 'react'\n\nimport { compareText, capitalize } from '../../../utils/text'\nimport { answerResult } from '../../../data/list'\n\nimport './Answer.css'\n\nconst Answer = ({ words, rows }) => {\n  const [answer, setAnswer] = useState('')\n\n  const handleAnswer = (event) => {\n    event.preventDefault()\n    const result = compareText(solution, words) ? 'c' : 'w'\n\n    setAnswer(result)\n  }\n\n  const [solution, setSolution] = useState('')\n\n  const handleSolution = (event) => {\n    setSolution(event.target.value)\n  }\n\n  useEffect(() => {\n    if (!words) {\n      setSolution('')\n      setAnswer('')\n    }\n  }, [words])\n\n  return (\n    <>\n      {!answer && (\n        <>\n          <div className=\"input-group\">\n            <span>Write the date in words</span>\n          </div>\n          <div className=\"input-group\">\n            <textarea\n              autoCapitalize=\"off\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              disabled={answer}\n              id=\"answer\"\n              name=\"answer\"\n              rows={rows}\n              spellCheck=\"false\"\n              value={solution}\n              onChange={(e) => handleSolution(e)}\n            />\n          </div>\n          <div className=\"input-group\">\n            <button\n              disabled={!solution || answer ? true : ''}\n              type=\"submit\"\n              onClick={handleAnswer}\n            >\n              Answer\n            </button>\n          </div>\n        </>\n      )}\n      {answer && (\n        <div>\n          <div className={`result result-${answerResult[answer]}`}>\n            <span>{capitalize(answerResult[answer])}!</span>\n          </div>\n          <div>\n            <div>{answer === 'w' && `Nop! the correct answer is `}</div>\n            <div>\n              {answer === 'c' && `Yes! is `}\n              <strong>{words}</strong>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nAnswer.propTypes = {\n  words: PropTypes.string.isRequired,\n  rows: PropTypes.number,\n}\n\nAnswer.defaultProps = {\n  rows: 1,\n}\n\nexport default Answer\n","export const randomNumberBetween = (min, max) => {\n  if (!min) {\n    min = 0\n  }\n\n  const random = Math.random()\n  const result = random * (max - min) + min / 2\n\n  return Math.round(result)\n}\n\nexport const randomPlaces = (decimalPlaces = 1) => {\n  const min = decimalPlaces === 1 ? 0 : decimalPlaces\n  const max = decimalPlaces * 10 - 1\n\n  return randomNumberBetween(min, max)\n}\n\nexport const formatCardinal = (value) => {\n  return new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(value)\n}\n\nexport const formatOrdinal = (value) => {\n  const suffixes = {\n    1: 'st',\n    2: 'nd',\n    3: 'rd',\n  }\n  const defaultSuffix = 'th'\n\n  let result = new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(value)\n\n  result += suffixes[value] || defaultSuffix\n\n  return result\n}\n","import { useEffect, useState } from 'react'\nimport converter from 'number-to-words'\n\nimport Nav from '../../components/ui/Nav/Nav'\nimport Listen from '../../components/shared/Listen/Listen'\nimport Answer from '../../components/shared/Answer/Answer'\nimport { PLACE_VALUES, numberTypes } from '../../data/list'\nimport {\n  formatOrdinal,\n  formatCardinal,\n  randomPlaces,\n} from '../../utils/numbers'\nimport { capitalize } from '../../utils/text'\n\nimport '../Pages.css'\n\nconst NumToWords = () => {\n  const [places, setPlaces] = useState(1)\n  const [type, setType] = useState('c')\n  const [number, setNumber] = useState(0)\n  const [words, setWords] = useState('')\n\n  const handlePlaces = (event) => {\n    setPlaces(event.target.value)\n  }\n\n  const handleTypes = (event) => {\n    setType(event.target.value)\n  }\n\n  const handleRandom = () => {\n    const value = randomPlaces(places)\n\n    setNumber(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [])\n\n  useEffect(() => {\n    handleRandom()\n  }, [places, type])\n\n  useEffect(() => {\n    let method = 'toWords'\n\n    if (type === 'o') {\n      method += 'Ordinal'\n    }\n\n    const result = converter[method](number)\n\n    setWords(result)\n  }, [number])\n\n  return (\n    <>\n      <Nav text=\"Number to Words\" />\n\n      <section>\n        <div className=\"input-group\">\n          <label htmlFor=\"level\">Level</label>\n          <select name=\"level\" value={places} onChange={(e) => handlePlaces(e)}>\n            {Object.entries(PLACE_VALUES).map((value, index) => (\n              <option key={value[0]} value={value[0]}>\n                {`${index + 1} - ${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"type\">Type</label>\n          <select name=\"type\" value={type} onChange={(e) => handleTypes(e)}>\n            {Object.entries(numberTypes).map((value) => (\n              <option key={value[0]} value={value[0]}>\n                {`${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"challenge\">\n          {type === 'o' && formatOrdinal(number)}\n          {type === 'c' && formatCardinal(number)}\n        </div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words} />\n        </div>\n        <Answer rows={4} words={words} />\n      </section>\n    </>\n  )\n}\n\nexport default NumToWords\n","import dateToWords from 'date-to-words'\n\nexport const isValidDate = (date) => {\n  if (!date) {\n    return false\n  }\n\n  return !Number.isNaN(date.valueOf())\n}\n\nexport const addYear = (amount = 1, date = new Date()) => {\n  if (!amount || Number.isNaN(amount)) {\n    throw new TypeError(`Invalid amount parameter: ${amount}`)\n  }\n  if (!date || !isValidDate(date)) {\n    throw new TypeError(`Invalid date parameter: ${date}`)\n  }\n\n  const year = date.getFullYear() + amount\n\n  return new Date(date.setFullYear(year))\n}\n\nexport const getYear = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError(`Invalid date parameter: ${date}`)\n  }\n\n  return date.getFullYear()\n}\n\nexport const getDateToWords = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError(`Invalid date parameter: ${date}`)\n  }\n\n  return dateToWords(date)\n}\n\nexport const getYearToWords = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError(`Invalid date parameter: ${date}`)\n  }\n\n  const words = dateToWords(date)\n\n  return words.split(',')[1].trim()\n}\n\nexport const randomDateBetween = (min, max = new Date()) => {\n  if (!isValidDate(min) || !isValidDate(max)) {\n    throw new TypeError('Invalid date parameter')\n  }\n\n  return new Date(\n    min.getTime() + Math.random() * (max.getTime() - min.getTime())\n  )\n}\n\nexport const formatDate = (value) => {\n  return new Intl.DateTimeFormat('en-US').format(value)\n}\n","import { useEffect, useState } from 'react'\n\nimport Nav from '../../components/ui/Nav/Nav'\nimport Listen from '../../components/shared/Listen/Listen'\nimport Answer from '../../components/shared/Answer/Answer'\nimport {\n  addYear,\n  getYearToWords,\n  randomDateBetween,\n  getYear,\n} from '../../utils/date'\n\nimport '../Pages.css'\n\nconst YearToWords = () => {\n  const [date, setDate] = useState(new Date())\n  const [words, setWords] = useState('')\n\n  const handleRandom = () => {\n    const min = new Date(1800, 0, 1)\n    const max = addYear(100, new Date())\n    const value = randomDateBetween(min, max)\n\n    setDate(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [])\n\n  useEffect(() => {\n    const result = getYearToWords(date)\n\n    setWords(result)\n  }, [date])\n\n  return (\n    <>\n      <Nav text=\"Year to Words\" />\n\n      <section>\n        <div className=\"challenge\">{getYear(date)}</div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words} />\n        </div>\n\n        <Answer words={words} />\n      </section>\n    </>\n  )\n}\n\nexport default YearToWords\n","import { useEffect, useState } from 'react'\n\nimport Nav from '../../components/ui/Nav/Nav'\nimport Listen from '../../components/shared/Listen/Listen'\nimport Answer from '../../components/shared/Answer/Answer'\nimport {\n  addYear,\n  getDateToWords,\n  randomDateBetween,\n  formatDate,\n} from '../../utils/date'\n\nimport '../Pages.css'\n\nconst DateToWords = () => {\n  const [date, setDate] = useState(new Date())\n  const [words, setWords] = useState('')\n\n  const handleRandom = () => {\n    const min = new Date(1800, 0, 1)\n    const max = addYear(100, new Date())\n    const value = randomDateBetween(min, max)\n\n    setDate(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [])\n\n  useEffect(() => {\n    const result = getDateToWords(date)\n\n    setWords(result)\n  }, [date])\n\n  return (\n    <>\n      <Nav text=\"Date to Words\" />\n\n      <section>\n        <div className=\"challenge\">{formatDate(date)}</div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words} />\n        </div>\n\n        <Answer rows={2} words={words} />\n      </section>\n    </>\n  )\n}\n\nexport default DateToWords\n","import timeInWords from 'time-in-words'\n\nimport { isValidDate } from './date'\nimport { randomNumberBetween } from './numbers'\n\nconst HOUR_RANGE = { MIN: 1, MAX: 12 }\nconst MINUTE_RANGE = { MIN: 0, MAX: 60 }\n\nexport const isValidHour = (hour) => {\n  if (!hour || Number.isNaN(hour)) {\n    return false\n  } else {\n    return hour >= HOUR_RANGE.MIN && hour <= HOUR_RANGE.MAX\n  }\n}\n\nexport const isValidMinute = (minutes) => {\n  if (!(minutes || minutes === 0) || Number.isNaN(minutes)) {\n    return false\n  } else {\n    return minutes >= MINUTE_RANGE.MIN && minutes <= MINUTE_RANGE.MAX\n  }\n}\n\nexport const getTimeToWords = ({ hour, minutes }) => {\n  if (!isValidDate(hour)) {\n    throw new TypeError(`Invalid hour parameter: ${hour}`)\n  }\n  if (!isValidMinute(minutes)) {\n    throw new TypeError(`Invalid minutes parameter: ${minutes}`)\n  }\n\n  return timeInWords(hour, minutes)\n}\n\nexport const randomTime = () => {\n  const hour = randomNumberBetween(HOUR_RANGE.MIN, HOUR_RANGE.MAX)\n  const minutes = randomNumberBetween(MINUTE_RANGE.MIN, MINUTE_RANGE.MAX)\n\n  return { hour, minutes }\n}\n","import NumToWords from '../pages/Numbers/NumToWords'\nimport YearToWords from '../pages/Dates/YearToWords'\nimport DateToWords from '../pages/Dates/DateToWords'\nimport TimeToWords from '../pages/Times/TimeToWords'\n\nexport const MENU_OPTIONS = [\n  {\n    section: 'write',\n    path: 'n2w',\n    text: 'Number to Words',\n    component: NumToWords,\n  },\n  {\n    section: 'write',\n    path: 'y2w',\n    text: 'Year to Words',\n    component: YearToWords,\n  },\n  {\n    section: 'write',\n    path: 'd2w',\n    text: 'Date to Words',\n    component: DateToWords,\n  },\n  {\n    section: 'write',\n    path: 't2w',\n    text: 'Time to Words',\n    component: TimeToWords,\n  },\n]\n","import { useEffect, useState } from 'react'\n\nimport Nav from '../../components/ui/Nav/Nav'\nimport Listen from '../../components/shared/Listen/Listen'\nimport Answer from '../../components/shared/Answer/Answer'\nimport { getTimeToWords, randomTime } from '../../utils/time'\n\nimport '../Pages.css'\n\nconst TimeToWords = () => {\n  const initialTime = { hour: 1, minutes: 0 }\n  const [time, setTime] = useState(initialTime)\n  const [words, setWords] = useState('')\n\n  const handleRandom = () => {\n    const value = randomTime()\n\n    setTime(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [])\n\n  useEffect(() => {\n    const result = getTimeToWords(time)\n\n    setWords(result)\n  }, [time])\n\n  return (\n    <>\n      <Nav text=\"Time to Words\" />\n\n      <section>\n        <div className=\"challenge\">{`${time.hour}:${String(\n          time.minutes\n        ).padStart(2, '0')}`}</div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words} />\n        </div>\n\n        <Answer rows={2} words={words} />\n      </section>\n    </>\n  )\n}\n\nexport default TimeToWords\n","import { Link } from 'react-router-dom'\n\nimport { MENU_OPTIONS } from '../../../data/menu'\n\nimport './Menu.css'\n\nconst Menu = () => {\n  return (\n    <>\n      <div className=\"main-menu\" data-testid=\"menu\">\n        {MENU_OPTIONS.map((menu) => (\n          <Link\n            key={menu.path}\n            data-testid={`${menu.path}-link`}\n            to={`/${menu.path}`}\n          >\n            {menu.text}\n          </Link>\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Menu\n","import Menu from '../../ui/Menu/Menu'\nimport Nav from '../../ui/Nav/Nav'\n\nconst Home = () => {\n  return (\n    <div data-testid=\"home\">\n      <Nav back={false} text=\"What would you like to practice?\" />\n\n      <Menu />\n    </div>\n  )\n}\n\nexport default Home\n","import { Link } from 'react-router-dom'\n\nimport Picture from '../../ui/Picture/Picture'\n\nimport './NotFound.css'\n\nconst NotFound = () => {\n  return (\n    <>\n      <div className=\"not-found\" data-testid=\"not-found\">\n        <div>\n          <h1>OOPSY!</h1>\n        </div>\n        <Picture\n          alt=\"Page Not Found\"\n          sizes={[320, 480, 720]}\n          src=\"error/404\"\n          types={['avif', 'webp', 'png']}\n        />\n        <Link data-testid=\"home-link\" to=\"/\">\n          Go Home!\n        </Link>\n      </div>\n    </>\n  )\n}\n\nexport default NotFound\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport Home from '../../sections/Home/Home';\nimport NotFound from '../../sections/NotFound/NotFound';\nimport {MENU_OPTIONS} from '../../../data/menu'\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact component={Home} path=\"/\" />\n        {MENU_OPTIONS.map((menu) => (\n          <Route\n            key={menu.path}\n            exact\n            component={menu.component}\n            path={`/${menu.path}`}\n          />\n        ))}\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;","import { useEffect } from 'react'\n\nimport Header from '../../sections/Header/Header'\nimport Footer from '../../sections/Footer/Footer'\nimport Routes from './Routes.jsx'\n\nimport { getTheme } from '../../../utils/theme'\n\nfunction Landing() {\n  useEffect(() => {\n    getTheme()\n  }, [])\n\n  return (\n    <>\n      <Header />\n      <main>\n        <Routes />\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default Landing\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport Landing from './components/layouts/Landing/Landing'\n\nimport './index.css'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Landing />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}