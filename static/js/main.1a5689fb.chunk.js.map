{"version":3,"sources":["assets/logo/logo.svg","components/Header/Header.js","components/Nav/Nav.js","components/Shared/Listen.js","utils/text.js","data/list.js","components/Shared/Answer.js","utils/numbers.js","components/Pages/Numbers/NumberToWords.js","utils/date.js","data/menu.js","components/Pages/Dates/YearToWords.js","components/Pages/Dates/DateToWords.js","components/Menu/Menu.js","components/Home/Home.js","components/NotFound/NotFound.js","Routes.jsx","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","src","logo","alt","Nav","back","text","data-testid","className","to","defaultProps","Listen","speech","Speech","init","volume","lang","process","rate","pitch","splitSentences","handleSpeech","a","speak","hasBrowserSupport","onClick","capitalize","split","map","word","charAt","toUpperCase","slice","join","placeValues","1","10","100","numberTypes","c","o","answerResult","w","Answer","words","rows","useState","answer","setAnswer","solution","setSolution","useEffect","name","id","onChange","e","target","value","disabled","autoComplete","autoCorrect","autoCapitalize","spellCheck","type","event","preventDefault","second","result","trim","toLowerCase","randomNumberBetween","min","max","random","Math","round","formatOrdinal","Intl","NumberFormat","format","2","3","NumToWords","history","places","setPlaces","setType","number","setNumber","setWords","handleRandom","decimalPlaces","randomPlaces","method","converter","htmlFor","Object","entries","index","isValidDate","date","isNaN","valueOf","addYear","amount","Date","TypeError","year","getFullYear","setFullYear","getYear","randomDateBetween","getTime","menuOptions","path","component","NumberToWords","setDate","dateToWords","getYearToWords","getDateToWords","DateTimeFormat","Menu","menu","Home","NotFound","Routes","useHistory","exact","Footer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a5689fb.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.27e338c4.svg\";","import './Header.css'\nimport logo from '../../assets/logo/logo.svg'\n\nconst Header = () => {\n  return (\n    <header>\n      <img src={logo} alt=\"logo\" />\n    </header>\n  )\n}\n\nexport default Header\n","import PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport './Nav.css'\n\nconst Nav = ({ back, text }) => {\n  return (\n    <nav data-testid=\"navbar\">\n      <div className={!back ? 'title' : 'subtitle'}>\n        {back && (\n          <h1>\n            <Link data-testid=\"home-link\" to=\"/\">\n              &lt;\n            </Link>\n          </h1>\n        )}\n        <h1>{text}</h1>\n      </div>\n    </nav>\n  )\n}\n\nNav.propTypes = {\n  back: PropTypes.bool,\n  text: PropTypes.string.isRequired,\n}\n\nNav.defaultProps = {\n  back: true,\n}\n\nexport default Nav\n","import PropTypes from 'prop-types'\n\nimport Speech from 'speak-tts'\n\nconst Listen = ({ text }) => {\n  const speech = new Speech()\n  speech.init({\n    volume: 1,\n    lang: process.env.REACT_APP_LOCALE,\n    rate: 1,\n    pitch: 1,\n    splitSentences: true,\n  })\n\n  const handleSpeech = async () => {\n    await speech.speak({\n      text: text,\n    })\n  }\n\n  return (\n    <>\n      {speech.hasBrowserSupport() && (\n        <button onClick={handleSpeech}>Listen</button>\n      )}\n    </>\n  )\n}\n\nListen.propTypes = {\n  text: PropTypes.string.isRequired,\n}\n\nexport default Listen\n","export const compareText = (first, second) => {\n  const cleanFirst = first.trim().toLowerCase()\n  const cleanSecond = second.trim().toLowerCase()\n  return cleanFirst === cleanSecond\n}\n\nexport const capitalize = (text) => {\n  if (!text) return ''\n\n  const words = text.split(' ')\n  const result = words\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ')\n\n  return result\n}\n","export const placeValues = {\n  1: 'ones',\n  10: 'tens',\n  100: 'hundreds',\n  1_000: 'thousands',\n  10_000: 'ten thousands',\n  100_000: 'hundreds thousands',\n  1_000_000: 'millions',\n  10_000_000: 'ten millions',\n  100_000_000: 'hundred millions',\n  1_000_000_000: 'billions',\n  1_000_000_000_000: 'trillions',\n}\n\nexport const numberTypes = {\n  c: 'cardinal',\n  o: 'ordinal',\n}\n\nexport const answerResult = {\n  c: 'correct',\n  w: 'wrong',\n}\n","import PropTypes from 'prop-types'\n\nimport { useEffect, useState } from 'react'\nimport { compareText, capitalize } from '../../utils/text'\nimport { answerResult } from '../../data/list'\n\nimport './Answer.css'\n\nconst Answer = ({ words, rows }) => {\n  const [answer, setAnswer] = useState('')\n\n  const handleAnswer = (event) => {\n    event.preventDefault()\n    const result = compareText(solution, words) ? 'c' : 'w'\n    setAnswer(result)\n  }\n\n  const [solution, setSolution] = useState('')\n\n  const handleSolution = (event) => {\n    setSolution(event.target.value)\n  }\n\n  useEffect(() => {\n    if (!words) {\n      setSolution('')\n      setAnswer('')\n    }\n  }, [words])\n\n  return (\n    <>\n      {!answer && (\n        <>\n          <div className=\"input-group\">\n            <span>Write the date in words</span>\n          </div>\n          <div className=\"input-group\">\n            <textarea\n              name=\"answer\"\n              id=\"answer\"\n              onChange={(e) => handleSolution(e)}\n              value={solution}\n              disabled={answer}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              rows={rows}\n            />\n          </div>\n          <div className=\"input-group\">\n            <button\n              type=\"submit\"\n              onClick={handleAnswer}\n              disabled={!solution || answer ? true : ''}\n            >\n              Answer\n            </button>\n          </div>\n        </>\n      )}\n      {answer && (\n        <div>\n          <div className={`result result-${answerResult[answer]}`}>\n            <span>{capitalize(answerResult[answer])}!</span>\n          </div>\n          <div>\n            <div>{answer === 'w' && `Nop! the correct answer is `}</div>\n            <div>\n              {answer === 'c' && `Yes! is `}\n              <strong>{words}</strong>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nAnswer.propTypes = {\n  words: PropTypes.string.isRequired,\n  rows: PropTypes.number,\n}\n\nAnswer.defaultProps = {\n  rows: 1,\n}\n\nexport default Answer\n","export const randomNumberBetween = (min = 0, max) => {\n  const random = Math.random()\n  const result = random * (max - min) + min / 2\n  return Math.round(result)\n}\n\nexport const randomPlaces = (decimalPlaces = 1) => {\n  const min = decimalPlaces === 1 ? 0 : decimalPlaces\n  const max = decimalPlaces * 10 - 1\n  const result = randomNumberBetween(min, max)\n  return result\n}\n\nexport const formatCardinal = (value) => {\n  const result = new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(\n    value\n  )\n  return result\n}\n\nexport const formatOrdinal = (value) => {\n  const suffixes = {\n    1: 'st',\n    2: 'nd',\n    3: 'rd',\n  }\n  const defaultSuffix = 'th'\n\n  let result = new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(value)\n  result += suffixes[value] || defaultSuffix\n  return result\n}\n","import { useEffect, useState } from 'react'\nimport converter from 'number-to-words'\n\nimport Nav from '../../Nav/Nav'\nimport Listen from '../../Shared/Listen'\nimport Answer from '../../Shared/Answer'\n\nimport { placeValues, numberTypes } from '../../../data/list'\nimport {\n  formatOrdinal,\n  formatCardinal,\n  randomPlaces,\n} from '../../../utils/numbers'\nimport { capitalize } from '../../../utils/text'\n\nimport '../Pages.css'\n\nconst NumToWords = ({ history }) => {\n  const [places, setPlaces] = useState(1)\n  const [type, setType] = useState('c')\n  const [number, setNumber] = useState(0)\n  const [words, setWords] = useState('')\n\n  const handlePlaces = (event) => {\n    setPlaces(event.target.value)\n  }\n\n  const handleTypes = (event) => {\n    setType(event.target.value)\n  }\n\n  const handleRandom = () => {\n    const value = randomPlaces(places)\n    setNumber(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [places, type])\n\n  useEffect(() => {\n    let method = 'toWords'\n    if (type === 'o') {\n      method += 'Ordinal'\n    }\n\n    const result = converter[method](number)\n    setWords(result)\n  }, [number])\n\n  return (\n    <>\n      <Nav text=\"Number to Words\"></Nav>\n\n      <section>\n        <div className=\"input-group\">\n          <label htmlFor=\"level\">Level</label>\n          <select name=\"level\" value={places} onChange={(e) => handlePlaces(e)}>\n            {Object.entries(placeValues).map((value, index) => (\n              <option key={index} value={value[0]}>\n                {`${index + 1} - ${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"type\">Type</label>\n          <select name=\"type\" value={type} onChange={(e) => handleTypes(e)}>\n            {Object.entries(numberTypes).map((value, index) => (\n              <option key={index} value={value[0]}>\n                {`${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"challenge\">\n          {type === 'o' && formatOrdinal(number)}\n          {type === 'c' && formatCardinal(number)}\n        </div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words}></Listen>\n        </div>\n        <Answer words={words} rows={4}></Answer>\n      </section>\n    </>\n  )\n}\n\nexport default NumToWords\n","import dateToWords from 'date-to-words'\n\nexport const isValidDate = (date) => {\n  if (!date) {\n    return false\n  }\n  const result = !isNaN(date.valueOf())\n  return result\n}\n\nexport const addYear = (amount = 1, date = new Date()) => {\n  if (!amount || isNaN(amount)) {\n    throw new TypeError('Invalid amount parameters')\n  }\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const year = date.getFullYear() + amount\n  return new Date(date.setFullYear(year))\n}\n\nexport const getYear = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  return date.getFullYear()\n}\n\nexport const getDateToWords = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const words = dateToWords(date)\n  return words\n}\n\nexport const getYearToWords = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const words = dateToWords(date)\n  const year = words.split(',')[1].trim()\n  return year\n}\n\nexport const randomDateBetween = (min, max = new Date()) => {\n  if (!isValidDate(min) || !isValidDate(max)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const date = new Date(\n    min.getTime() + Math.random() * (max.getTime() - min.getTime())\n  )\n  return date\n}\n\nexport const formatDate = (value) => {\n  const result = new Intl.DateTimeFormat('en-US').format(value)\n  return result\n}\n","import NumberToWords from '../components/Pages/Numbers/NumberToWords'\nimport YearToWords from '../components/Pages/Dates/YearToWords'\nimport DateToWords from '../components/Pages/Dates/DateToWords'\n\nexport const menuOptions = [\n  { path: 'n2w', component: NumberToWords, text: 'Number to Words' },\n  { path: 'y2w', component: YearToWords, text: 'Year to Words' },\n  { path: 'd2w', component: DateToWords, text: 'Date to Words' },\n]\n","import { useEffect, useState } from 'react'\n\nimport Nav from '../../Nav/Nav'\nimport Listen from '../../Shared/Listen'\nimport Answer from '../../Shared/Answer'\n\nimport {\n  addYear,\n  getYearToWords,\n  randomDateBetween,\n  getYear,\n} from '../../../utils/date'\n\nimport '../Pages.css'\n\nconst YearToWords = ({ history }) => {\n  const [date, setDate] = useState(new Date())\n  const [words, setWords] = useState('')\n\n  const handleRandom = () => {\n    const min = new Date(1800, 0, 1)\n    const max = addYear(100, new Date())\n    const value = randomDateBetween(min, max)\n\n    setDate(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    const result = getYearToWords(date)\n    setWords(result)\n  }, [date])\n\n  return (\n    <>\n      <Nav text=\"Year to Words\"></Nav>\n\n      <section>\n        <div className=\"challenge\">{getYear(date)}</div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words}></Listen>\n        </div>\n\n        <Answer words={words}></Answer>\n      </section>\n    </>\n  )\n}\n\nexport default YearToWords\n","import { useEffect, useState } from 'react'\n\nimport Nav from '../../Nav/Nav'\nimport Listen from '../../Shared/Listen'\nimport Answer from '../../Shared/Answer'\n\nimport {\n  addYear,\n  getDateToWords,\n  randomDateBetween,\n  formatDate,\n} from '../../../utils/date'\n\nimport '../Pages.css'\n\nconst DateToWords = ({ history }) => {\n  const [date, setDate] = useState(new Date())\n  const [words, setWords] = useState('')\n\n  const handleRandom = () => {\n    const min = new Date(1800, 0, 1)\n    const max = addYear(100, new Date())\n    const value = randomDateBetween(min, max)\n\n    setDate(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    const result = getDateToWords(date)\n    setWords(result)\n  }, [date])\n\n  return (\n    <>\n      <Nav text=\"Date to Words\"></Nav>\n\n      <section>\n        <div className=\"challenge\">{formatDate(date)}</div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words}></Listen>\n        </div>\n\n        <Answer words={words} rows={2}></Answer>\n      </section>\n    </>\n  )\n}\n\nexport default DateToWords\n","import { Link } from 'react-router-dom'\nimport { menuOptions } from '../../data/menu'\n\nimport './Menu.css'\n\nconst Menu = () => {\n  return (\n    <>\n      <div className=\"main-menu\" data-testid=\"menu\">\n        {menuOptions.map((menu, index) => (\n          <Link\n            key={index}\n            data-testid={`${menu.path}-link`}\n            to={`/${menu.path}`}\n          >\n            {menu.text}\n          </Link>\n        ))}\n      </div>\n    </>\n  )\n}\n\nexport default Menu\n","import Menu from '../Menu/Menu'\nimport Nav from '../Nav/Nav'\n\nconst Home = ({ history }) => {\n  return (\n    <div data-testid=\"home\">\n      <Nav back={false} text=\"What would you like to practice?\"></Nav>\n\n      <Menu />\n    </div>\n  )\n}\n\nexport default Home\n","const NotFound = ({ history }) => {\n  return (\n    <>\n      <span data-testid=\"not-found\">OPS! PAGE NOT FOUND</span>\n    </>\n  )\n}\n\nexport default NotFound\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport NotFound from './components/NotFound/NotFound';\n\nimport {menuOptions} from './data/menu'\n\nconst Routes = () => {\n  const history = useHistory();\n\n  return (\n    <Router>\n      <Switch history={history}>\n        <Route exact path=\"/\" component={Home} />\n        {menuOptions.map((menu, index) => (\n          <Route\n            key={index}\n            exact\n            path={`/${menu.path}`}\n            component={menu.component}\n          />\n        ))}\n        <Route component={NotFound} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;","import './Footer.css'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        Created by <a href=\"https://github.com/equiman\">equiman</a>\n      </div>\n      <div>2021 © {new Date().getFullYear()}</div>\n    </footer>\n  )\n}\n\nexport default Footer\n","import Header from './components/Header/Header'\nimport Routes from './Routes'\nimport Footer from './components/Footer/Footer'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <main>\n        <Routes />\n      </main>\n      <Footer />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport './index.css'\n\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}