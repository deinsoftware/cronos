{"version":3,"sources":["assets/logo/logo.svg","components/Header/Header.js","components/Menu/Menu.js","components/Shared/Nav.js","components/Home/Home.js","components/Shared/Listen.js","utils/text.js","data/list.js","components/Shared/Answer.js","utils/numbers.js","components/Pages/Numbers/NumberToWords.js","utils/date.js","components/Pages/Dates/YearToWords.js","components/Pages/Dates/DateToWords.js","Routes.jsx","components/Footer/Footer.js","reportWebVitals.js","index.js"],"names":["Header","src","logo","alt","Menu","history","handleOnClick","e","id","target","dataset","push","className","data-id","onClick","Breadcrumbs","back","text","goBack","defaultProps","Home","Listen","speech","Speech","init","volume","lang","process","rate","pitch","splitSentences","handleSpeech","a","speak","hasBrowserSupport","capitalize","split","map","word","charAt","toUpperCase","slice","join","placeValues","1","10","100","numberTypes","c","o","answerResult","w","Answer","words","useState","answer","setAnswer","solution","setSolution","useEffect","name","onChange","value","disabled","autoComplete","autoCorrect","autoCapitalize","spellCheck","rows","type","event","preventDefault","second","result","trim","toLowerCase","randomNumberBetween","min","max","random","Math","round","formatOrdinal","Intl","NumberFormat","format","2","3","NumToWords","places","setPlaces","setType","number","setNumber","setWords","handleRandom","decimalPlaces","randomPlaces","method","converter","htmlFor","Object","entries","index","isValidDate","date","isNaN","valueOf","addYear","amount","Date","TypeError","year","getFullYear","setFullYear","getYear","randomDateBetween","getTime","YearToWords","setDate","dateToWords","getYearToWords","DateToWords","getDateToWords","DateTimeFormat","Routes","useHistory","exact","path","component","NumberToWords","Footer","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec014b59.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.238dba80.svg\";","import './Header.css'\nimport logo from '../../assets/logo/logo.svg'\n\nconst Header = () => {\n  return (\n    <header>\n      <img src={logo} alt=\"logo\" />\n    </header>\n  )\n}\n\nexport default Header\n","import './Menu.css'\n\nconst Menu = ({ history }) => {\n  const handleOnClick = (e) => {\n    const { id } = e.target.dataset\n    history.push(`/${id}`)\n  }\n\n  return (\n    <>\n      <div className=\"content\">\n        <ul>\n          <li data-id=\"n2w\" onClick={handleOnClick}>\n            Number to Words\n          </li>\n          <li data-id=\"y2w\" onClick={handleOnClick}>\n            YearToWords\n          </li>\n          <li data-id=\"d2w\" onClick={handleOnClick}>\n            Date to Words\n          </li>\n        </ul>\n      </div>\n    </>\n  )\n}\n\nexport default Menu\n","import PropTypes from 'prop-types'\n\nimport './Nav.css'\n\nconst Breadcrumbs = ({ history, back, text }) => {\n  const handleBack = (e) => {\n    history.goBack()\n  }\n\n  return (\n    <nav>\n      <div className={!back ? 'title' : 'subtitle'}>\n        {back && (\n          <h1>\n            <a onClick={handleBack}>&lt;</a>\n          </h1>\n        )}\n        <h1>{text}</h1>\n      </div>\n    </nav>\n  )\n}\n\nBreadcrumbs.propTypes = {\n  history: PropTypes.object.isRequired,\n  back: PropTypes.bool,\n  text: PropTypes.string.isRequired,\n}\n\nBreadcrumbs.defaultProps = {\n  back: false,\n}\n\nexport default Breadcrumbs\n","import Menu from '../Menu/Menu'\nimport Nav from '../Shared/Nav'\n\nconst Home = ({ history }) => {\n  return (\n    <>\n      <Nav history={history} text=\"What would you like to practice?\"></Nav>\n\n      <Menu history={history} />\n    </>\n  )\n}\n\nexport default Home\n","import PropTypes from 'prop-types'\n\nimport Speech from 'speak-tts'\n\nconst Listen = ({ text }) => {\n  const speech = new Speech()\n  speech.init({\n    volume: 1,\n    lang: process.env.REACT_APP_LOCALE,\n    rate: 1,\n    pitch: 1,\n    splitSentences: true,\n  })\n\n  const handleSpeech = async () => {\n    await speech.speak({\n      text: text,\n    })\n  }\n\n  return (\n    <>\n      {speech.hasBrowserSupport() && (\n        <button onClick={handleSpeech}>Listen</button>\n      )}\n    </>\n  )\n}\n\nListen.propTypes = {\n  text: PropTypes.string.isRequired,\n}\n\nexport default Listen\n","export const compareText = (first, second) => {\n  const cleanFirst = first.trim().toLowerCase()\n  const cleanSecond = second.trim().toLowerCase()\n  return cleanFirst === cleanSecond\n}\n\nexport const capitalize = (text) => {\n  if (!text) return ''\n\n  const words = text.split(' ')\n  const result = words\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ')\n\n  return result\n}\n","export const placeValues = {\n  1: 'ones',\n  10: 'tens',\n  100: 'hundreds',\n  1_000: 'thousands',\n  10_000: 'ten thousands',\n  100_000: 'hundreds thousands',\n  1_000_000: 'millions',\n  10_000_000: 'ten millions',\n  100_000_000: 'hundred millions',\n  1_000_000_000: 'billions',\n  1_000_000_000_000: 'trillions',\n}\n\nexport const numberTypes = {\n  c: 'cardinal',\n  o: 'ordinal',\n}\n\nexport const answerResult = {\n  c: 'correct',\n  w: 'wrong',\n}\n","import { useEffect, useState } from 'react'\nimport { compareText, capitalize } from '../../utils/text'\nimport { answerResult } from '../../data/list'\n\nimport './Answer.css'\n\nconst Answer = ({ words }) => {\n  const [answer, setAnswer] = useState('')\n\n  const handleAnswer = (event) => {\n    event.preventDefault()\n    const result = compareText(solution, words) ? 'c' : 'w'\n    setAnswer(result)\n  }\n\n  const [solution, setSolution] = useState('')\n\n  const handleSolution = (event) => {\n    setSolution(event.target.value)\n  }\n\n  useEffect(() => {\n    if (!words) {\n      setSolution('')\n      setAnswer('')\n    }\n  }, [words])\n\n  return (\n    <>\n      {!answer && (\n        <>\n          <div className=\"input-group\">\n            <span>Write the date in words</span>\n          </div>\n          <div className=\"input-group\">\n            <textarea\n              name=\"answer\"\n              id=\"answer\"\n              onChange={(e) => handleSolution(e)}\n              value={solution}\n              disabled={answer}\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              rows=\"4\"\n            />\n          </div>\n          <div className=\"input-group\">\n            <button\n              type=\"submit\"\n              onClick={handleAnswer}\n              disabled={!solution || answer ? true : ''}\n            >\n              Answer\n            </button>\n          </div>\n        </>\n      )}\n      {answer && (\n        <div>\n          <div className={`result result-${answerResult[answer]}`}>\n            <span>{capitalize(answerResult[answer])}!</span>\n          </div>\n          <div>\n            <div>{answer === 'w' && `Nop! the correct answer is `}</div>\n            <div>\n              {answer === 'c' && `Yes! is `}\n              <strong>{words}</strong>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Answer\n","export const randomNumberBetween = (min = 0, max) => {\n  const random = Math.random()\n  const result = random * (max - min + 1) + min / 2\n  return Math.round(result)\n}\n\nexport const randomPlaces = (decimalPlaces = 1) => {\n  const min = decimalPlaces === 1 ? 0 : decimalPlaces\n  const max = decimalPlaces * 10 - 1\n  const result = randomNumberBetween(min, max)\n  return result\n}\n\nexport const formatCardinal = (value) => {\n  const result = new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(\n    value\n  )\n  return result\n}\n\nexport const formatOrdinal = (value) => {\n  const suffixes = {\n    1: 'st',\n    2: 'nd',\n    3: 'rd',\n  }\n  const defaultSuffix = 'th'\n\n  let result = new Intl.NumberFormat(process.env.REACT_APP_LOCALE).format(value)\n  result += suffixes[value] || defaultSuffix\n  return result\n}\n","import { useEffect, useState } from 'react'\nimport converter from 'number-to-words'\n\nimport Nav from '../../Shared/Nav'\nimport Listen from '../../Shared/Listen'\nimport Answer from '../../Shared/Answer'\n\nimport { placeValues, numberTypes } from '../../../data/list'\nimport {\n  formatOrdinal,\n  formatCardinal,\n  randomPlaces,\n} from '../../../utils/numbers'\nimport { capitalize } from '../../../utils/text'\n\nimport '../Pages.css'\n\nconst NumToWords = ({ history }) => {\n  const [places, setPlaces] = useState(1)\n  const [type, setType] = useState('c')\n  const [number, setNumber] = useState(0)\n  const [words, setWords] = useState('')\n\n  const handlePlaces = (event) => {\n    setPlaces(event.target.value)\n  }\n\n  const handleTypes = (event) => {\n    setType(event.target.value)\n  }\n\n  const handleRandom = () => {\n    const value = randomPlaces(places)\n    setNumber(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    handleRandom()\n  }, [places, type])\n\n  useEffect(() => {\n    let method = 'toWords'\n    if (type === 'o') {\n      method += 'Ordinal'\n    }\n\n    const result = converter[method](number)\n    setWords(result)\n  }, [number])\n\n  return (\n    <>\n      <Nav history={history} back={true} text=\"Number to Words\"></Nav>\n\n      <section>\n        <div className=\"input-group\">\n          <label htmlFor=\"level\">Level</label>\n          <select name=\"level\" value={places} onChange={(e) => handlePlaces(e)}>\n            {Object.entries(placeValues).map((value, index) => (\n              <option key={index} value={value[0]}>\n                {`${index + 1} - ${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"type\">Type</label>\n          <select name=\"type\" value={type} onChange={(e) => handleTypes(e)}>\n            {Object.entries(numberTypes).map((value, index) => (\n              <option key={index} value={value[0]}>\n                {`${capitalize(value[1])}`}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"challenge\">\n          {type === 'o' && formatOrdinal(number)}\n          {type === 'c' && formatCardinal(number)}\n        </div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words}></Listen>\n        </div>\n        <Answer words={words}></Answer>\n      </section>\n    </>\n  )\n}\n\nexport default NumToWords\n","import dateToWords from 'date-to-words'\n\nexport const isValidDate = (date) => {\n  if (!date) {\n    return false\n  }\n  const result = !isNaN(date.valueOf())\n  return result\n}\n\nexport const addYear = (amount = 1, date = new Date()) => {\n  if (!amount || isNaN(amount)) {\n    throw new TypeError('Invalid amount parameters')\n  }\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const year = date.getFullYear() + amount\n  return new Date(date.setFullYear(year))\n}\n\nexport const getYear = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  return date.getFullYear()\n}\n\nexport const getDateToWords = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const words = dateToWords(date)\n  return words\n}\n\nexport const getYearToWords = (date) => {\n  if (!date || !isValidDate(date)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const words = dateToWords(date)\n  const year = words.split(',')[1].trim()\n  return year\n}\n\nexport const randomDateBetween = (min, max = new Date()) => {\n  if (!isValidDate(min) || !isValidDate(max)) {\n    throw new TypeError('Invalid date parameters')\n  }\n\n  const date = new Date(\n    min.getTime() + Math.random() * (max.getTime() - min.getTime())\n  )\n  return date\n}\n\nexport const formatDate = (value) => {\n  const result = new Intl.DateTimeFormat('en-US').format(value)\n  return result\n}\n","import { useEffect, useState } from 'react'\n\nimport Nav from '../../Shared/Nav'\nimport Listen from '../../Shared/Listen'\nimport Answer from '../../Shared/Answer'\n\nimport {\n  addYear,\n  getYearToWords,\n  randomDateBetween,\n  getYear,\n} from '../../../utils/date'\n\nimport '../Pages.css'\n\nconst YearToWords = ({ history }) => {\n  const [date, setDate] = useState(new Date())\n  const [words, setWords] = useState('')\n\n  const handleRandom = () => {\n    const min = new Date(1800, 0, 1)\n    const max = addYear(100, new Date())\n    const value = randomDateBetween(min, max)\n\n    setDate(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    const result = getYearToWords(date)\n    setWords(result)\n  }, [date])\n\n  return (\n    <>\n      <Nav history={history} back={true} text=\"Year to Words\"></Nav>\n\n      <section>\n        <div className=\"challenge\">{getYear(date)}</div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words}></Listen>\n        </div>\n\n        <Answer words={words}></Answer>\n      </section>\n    </>\n  )\n}\n\nexport default YearToWords\n","import { useEffect, useState } from 'react'\n\nimport Nav from '../../Shared/Nav'\nimport Listen from '../../Shared/Listen'\nimport Answer from '../../Shared/Answer'\n\nimport {\n  addYear,\n  getDateToWords,\n  randomDateBetween,\n  formatDate,\n} from '../../../utils/date'\n\nimport '../Pages.css'\n\nconst DateToWords = ({ history }) => {\n  const [date, setDate] = useState(new Date())\n  const [words, setWords] = useState('')\n\n  const handleRandom = () => {\n    const min = new Date(1800, 0, 1)\n    const max = addYear(100, new Date())\n    const value = randomDateBetween(min, max)\n\n    setDate(value)\n    setWords('')\n  }\n\n  useEffect(() => {\n    const result = getDateToWords(date)\n    setWords(result)\n  }, [date])\n\n  return (\n    <>\n      <Nav history={history} back={true} text=\"Date to Words\"></Nav>\n\n      <section>\n        <div className=\"challenge\">{formatDate(date)}</div>\n        <div className=\"input-group\">\n          <button onClick={handleRandom}>Refresh</button>\n          <Listen text={words}></Listen>\n        </div>\n\n        <Answer words={words}></Answer>\n      </section>\n    </>\n  )\n}\n\nexport default DateToWords\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n} from 'react-router-dom';\n\nimport Home from './components/Home/Home';\nimport NumberToWords from './components/Pages/Numbers/NumberToWords';\nimport YearToWords from './components/Pages/Dates/YearToWords';\nimport DateToWords from './components/Pages/Dates/DateToWords';\n\nconst Routes = () => {\n  const history = useHistory();\n\n  return (\n    <Router>\n      <Switch history={history}>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/n2w\" component={NumberToWords} />\n        <Route exact path=\"/y2w\" component={YearToWords} />\n        <Route exact path=\"/d2w\" component={DateToWords} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default Routes;","import './Footer.css'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div>\n        Created by <a href=\"https://github.com/equiman\">equiman</a>\n      </div>\n      <div>2021 © {new Date().getFullYear()}</div>\n    </footer>\n  )\n}\n\nexport default Footer\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Header from './components/Header/Header'\nimport Routes from './Routes'\nimport Footer from './components/Footer/Footer'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header></Header>\n    <main>\n      <Routes />\n    </main>\n    <Footer></Footer>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}